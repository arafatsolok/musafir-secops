##version: "3.8"

services:
  # Core Infrastructure
  redpanda:
    image: redpandadata/redpanda:v24.1.5
    command:
      - redpanda start
      - --overprovisioned
      - --smp=1
      - --memory=2048M
      - --reserve-memory=0M
      - --node-id=0
      - --check=false
    ports:
      - "9092:9092"   # Kafka API
      - "9644:9644"   # Admin API
    volumes:
      - redpanda_data:/var/lib/redpanda/data
    environment:
      - REDPANDA_AUTO_CREATE_TOPICS_ENABLED=true

  clickhouse:
    image: clickhouse/clickhouse-server:24.8
    ports:
      - "8123:8123"   # HTTP
      - "9000:9000"   # Native
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    environment:
      - CLICKHOUSE_DB=musafir
      - CLICKHOUSE_USER=musafir
      - CLICKHOUSE_PASSWORD=Strong@!@#bdnews24#

  # Advanced Services
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1

  neo4j:
    image: neo4j:5.15-community
    ports:
      - "7474:7474"   # HTTP
      - "7687:7687"   # Bolt
    environment:
      - NEO4J_AUTH=neo4j/Strong@!@#bdnews24#
      - NEO4J_PLUGINS=["apoc"]
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs

  # Monitoring and Observability
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=musafir
      - GF_SECURITY_ADMIN_PASSWORD=Strong@!@#bdnews24#
      - GF_USERS_ALLOW_SIGN_UP=false

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"  # Web UI
      - "14268:14268"  # HTTP
    environment:
      - COLLECTOR_OTLP_ENABLED=true

  # Security Services
  vault:
    image: vault:latest
    ports:
      - "8200:8200"
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=musafir
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
    cap_add:
      - IPC_LOCK

  # Database Services
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=musafir
      - POSTGRES_USER=musafir
      - POSTGRES_PASSWORD=Strong@!@#bdnews24#
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Message Queue
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"   # AMQP
      - "15672:15672" # Management UI
    environment:
      - RABBITMQ_DEFAULT_USER=musafir
      - RABBITMQ_DEFAULT_PASS=Strong@!@#bdnews24#
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  # Cache
  memcached:
    image: memcached:alpine
    ports:
      - "11211:11211"
    command: memcached -m 512

  # Load Balancer
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - gateway

  # Development Tools
  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"   # SMTP
      - "8025:8025"   # Web UI

  # Log Aggregation
  fluentd:
    image: fluent/fluentd:latest
    ports:
      - "24224:24224"
    volumes:
      - ./fluentd.conf:/fluentd/etc/fluent.conf
      - fluentd_data:/var/log/fluentd

  # File Storage
  minio:
    image: minio/minio:latest
    ports:
      - "9001:9000"   # API
      - "9002:9001"   # Console
    environment:
      - MINIO_ROOT_USER=musafir
      - MINIO_ROOT_PASSWORD=Strong@!@#bdnews24#
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"

  # Forensics Service
  forensics:
    build:
      context: ../services/forensics
      dockerfile: Dockerfile
    ports:
      - "8095:8095"
    environment:
      - KAFKA_BROKERS=redpanda:9092
      - CLICKHOUSE_DSN=tcp://clickhouse:9000?database=default
    depends_on:
      - redpanda
      - clickhouse
    networks:
      - musafir-network

volumes:
  redpanda_data:
  clickhouse_data:
  redis_data:
  elasticsearch_data:
  neo4j_data:
  neo4j_logs:
  prometheus_data:
  grafana_data:
  postgres_data:
  rabbitmq_data:
  fluentd_data:
  minio_data:

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
